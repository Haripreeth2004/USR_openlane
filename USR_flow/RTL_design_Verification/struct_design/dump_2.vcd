$date
	Sat Oct  5 13:34:50 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_UAR $end
$scope module dut $end
$var wire 1 ! clk $end
$var wire 4 " d_in [3:0] $end
$var wire 1 # q0 $end
$var wire 1 $ q1 $end
$var wire 1 % q2 $end
$var wire 1 & q3 $end
$var wire 2 ' select [1:0] $end
$var wire 4 ( q [3:0] $end
$scope module bit0 $end
$var wire 1 ! clk $end
$var wire 1 ) d_in $end
$var wire 1 $ d_left $end
$var wire 1 * d_right $end
$var wire 2 + select [1:0] $end
$var wire 1 , d_mux_out $end
$var reg 1 - q $end
$scope module mux $end
$var wire 1 - d_hold $end
$var wire 1 ) d_parallel_load $end
$var wire 1 $ d_shift_left $end
$var wire 1 * d_shift_right $end
$var wire 2 . select [1:0] $end
$var reg 1 , q $end
$upscope $end
$upscope $end
$scope module bit1 $end
$var wire 1 ! clk $end
$var wire 1 / d_in $end
$var wire 1 % d_left $end
$var wire 1 # d_right $end
$var wire 2 0 select [1:0] $end
$var wire 1 1 d_mux_out $end
$var reg 1 2 q $end
$scope module mux $end
$var wire 1 2 d_hold $end
$var wire 1 / d_parallel_load $end
$var wire 1 % d_shift_left $end
$var wire 1 # d_shift_right $end
$var wire 2 3 select [1:0] $end
$var reg 1 1 q $end
$upscope $end
$upscope $end
$scope module bit2 $end
$var wire 1 ! clk $end
$var wire 1 4 d_in $end
$var wire 1 & d_left $end
$var wire 1 $ d_right $end
$var wire 2 5 select [1:0] $end
$var wire 1 6 d_mux_out $end
$var reg 1 7 q $end
$scope module mux $end
$var wire 1 7 d_hold $end
$var wire 1 4 d_parallel_load $end
$var wire 1 & d_shift_left $end
$var wire 1 $ d_shift_right $end
$var wire 2 8 select [1:0] $end
$var reg 1 6 q $end
$upscope $end
$upscope $end
$scope module bit3 $end
$var wire 1 ! clk $end
$var wire 1 9 d_in $end
$var wire 1 : d_left $end
$var wire 1 % d_right $end
$var wire 2 ; select [1:0] $end
$var wire 1 < d_mux_out $end
$var reg 1 = q $end
$scope module mux $end
$var wire 1 = d_hold $end
$var wire 1 9 d_parallel_load $end
$var wire 1 : d_shift_left $end
$var wire 1 % d_shift_right $end
$var wire 2 > select [1:0] $end
$var reg 1 < q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 >
x=
x<
b0 ;
0:
09
b0 8
x7
x6
b0 5
04
b0 3
x2
x1
b0 0
0/
b0 .
x-
x,
b0 +
0*
0)
bx (
b0 '
z&
z%
z$
z#
b0 "
0!
$end
#5
1!
#10
0,
11
06
1<
1/
19
0!
b11 '
b11 +
b11 .
b11 0
b11 3
b11 5
b11 8
b11 ;
b11 >
b1010 "
#15
1=
07
12
b1010 (
0-
1!
#20
z,
z1
z6
0<
0!
b10 '
b10 +
b10 .
b10 0
b10 3
b10 5
b10 8
b10 ;
b10 >
#25
z-
z2
z7
b0zzz (
0=
1!
#30
0,
z<
0!
b1 '
b1 +
b1 .
b1 0
b1 3
b1 5
b1 8
b1 ;
b1 >
#35
z=
bz0 (
0-
1!
#40
0!
b0 '
b0 +
b0 .
b0 0
b0 3
b0 5
b0 8
b0 ;
b0 >
#45
1!
#50
01
16
1<
0/
14
0!
b11 '
b11 +
b11 .
b11 0
b11 3
b11 5
b11 8
b11 ;
b11 >
b1100 "
#55
1=
17
b1100 (
02
1!
#60
z,
z1
z6
0<
0!
b10 '
b10 +
b10 .
b10 0
b10 3
b10 5
b10 8
b10 ;
b10 >
#65
z-
z2
z7
b0zzz (
0=
1!
#70
0!
b0 '
b0 +
b0 .
b0 0
b0 3
b0 5
b0 8
b0 ;
b0 >
#75
1!
#80
0,
z<
0!
b1 '
b1 +
b1 .
b1 0
b1 3
b1 5
b1 8
b1 ;
b1 >
#85
0-
bz0 (
z=
1!
#90
0!
