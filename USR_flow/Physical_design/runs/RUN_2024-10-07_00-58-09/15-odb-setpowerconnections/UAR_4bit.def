VERSION 5.8 ;
DIVIDERCHAR "/" ;
BUSBITCHARS "[]" ;
DESIGN UAR_4bit ;
UNITS DISTANCE MICRONS 1000 ;
DIEAREA ( 0 0 ) ( 31480 42200 ) ;
ROW ROW_0 unithd 5520 10880 N DO 44 BY 1 STEP 460 0 ;
ROW ROW_1 unithd 5520 13600 FS DO 44 BY 1 STEP 460 0 ;
ROW ROW_2 unithd 5520 16320 N DO 44 BY 1 STEP 460 0 ;
ROW ROW_3 unithd 5520 19040 FS DO 44 BY 1 STEP 460 0 ;
ROW ROW_4 unithd 5520 21760 N DO 44 BY 1 STEP 460 0 ;
ROW ROW_5 unithd 5520 24480 FS DO 44 BY 1 STEP 460 0 ;
ROW ROW_6 unithd 5520 27200 N DO 44 BY 1 STEP 460 0 ;
TRACKS X 230 DO 68 STEP 460 LAYER li1 ;
TRACKS Y 170 DO 124 STEP 340 LAYER li1 ;
TRACKS X 170 DO 92 STEP 340 LAYER met1 ;
TRACKS Y 170 DO 124 STEP 340 LAYER met1 ;
TRACKS X 230 DO 68 STEP 460 LAYER met2 ;
TRACKS Y 230 DO 92 STEP 460 LAYER met2 ;
TRACKS X 340 DO 46 STEP 680 LAYER met3 ;
TRACKS Y 340 DO 62 STEP 680 LAYER met3 ;
TRACKS X 460 DO 34 STEP 920 LAYER met4 ;
TRACKS Y 460 DO 46 STEP 920 LAYER met4 ;
TRACKS X 1700 DO 9 STEP 3400 LAYER met5 ;
TRACKS Y 1700 DO 12 STEP 3400 LAYER met5 ;
COMPONENTS 17 ;
    - _09_ sky130_fd_sc_hd__inv_2 ;
    - _10_ sky130_fd_sc_hd__nor2_2 ;
    - _11_ sky130_fd_sc_hd__mux2_1 ;
    - _12_ sky130_fd_sc_hd__a22o_2 ;
    - _13_ sky130_fd_sc_hd__and3_2 ;
    - _14_ sky130_fd_sc_hd__mux2_1 ;
    - _15_ sky130_fd_sc_hd__a21o_2 ;
    - _16_ sky130_fd_sc_hd__mux4_2 ;
    - _17_ sky130_fd_sc_hd__mux4_2 ;
    - _18_ sky130_fd_sc_hd__dfxtp_2 ;
    - _19_ sky130_fd_sc_hd__dfxtp_2 ;
    - _20_ sky130_fd_sc_hd__dfxtp_2 ;
    - _21_ sky130_fd_sc_hd__dfxtp_2 ;
    - _22_ sky130_fd_sc_hd__buf_2 ;
    - _23_ sky130_fd_sc_hd__buf_2 ;
    - _24_ sky130_fd_sc_hd__buf_2 ;
    - _25_ sky130_fd_sc_hd__buf_2 ;
END COMPONENTS
PINS 11 ;
    - clk + NET clk + DIRECTION INPUT + USE SIGNAL ;
    - d_in[0] + NET d_in[0] + DIRECTION INPUT + USE SIGNAL ;
    - d_in[1] + NET d_in[1] + DIRECTION INPUT + USE SIGNAL ;
    - d_in[2] + NET d_in[2] + DIRECTION INPUT + USE SIGNAL ;
    - d_in[3] + NET d_in[3] + DIRECTION INPUT + USE SIGNAL ;
    - q[0] + NET q[0] + DIRECTION OUTPUT + USE SIGNAL ;
    - q[1] + NET q[1] + DIRECTION OUTPUT + USE SIGNAL ;
    - q[2] + NET q[2] + DIRECTION OUTPUT + USE SIGNAL ;
    - q[3] + NET q[3] + DIRECTION OUTPUT + USE SIGNAL ;
    - select[0] + NET select[0] + DIRECTION INPUT + USE SIGNAL ;
    - select[1] + NET select[1] + DIRECTION INPUT + USE SIGNAL ;
END PINS
SPECIALNETS 2 ;
    - VGND ( _25_ VNB ) ( _24_ VNB ) ( _23_ VNB ) ( _22_ VNB ) ( _21_ VNB ) ( _20_ VNB ) ( _19_ VNB )
      ( _18_ VNB ) ( _17_ VNB ) ( _16_ VNB ) ( _15_ VNB ) ( _14_ VNB ) ( _13_ VNB ) ( _12_ VNB ) ( _11_ VNB )
      ( _10_ VNB ) ( _09_ VNB ) ( _25_ VGND ) ( _24_ VGND ) ( _23_ VGND ) ( _22_ VGND ) ( _21_ VGND ) ( _20_ VGND )
      ( _19_ VGND ) ( _18_ VGND ) ( _17_ VGND ) ( _16_ VGND ) ( _15_ VGND ) ( _14_ VGND ) ( _13_ VGND ) ( _12_ VGND )
      ( _11_ VGND ) ( _10_ VGND ) ( _09_ VGND ) + USE GROUND ;
    - VPWR ( _25_ VPB ) ( _24_ VPB ) ( _23_ VPB ) ( _22_ VPB ) ( _21_ VPB ) ( _20_ VPB ) ( _19_ VPB )
      ( _18_ VPB ) ( _17_ VPB ) ( _16_ VPB ) ( _15_ VPB ) ( _14_ VPB ) ( _13_ VPB ) ( _12_ VPB ) ( _11_ VPB )
      ( _10_ VPB ) ( _09_ VPB ) ( _25_ VPWR ) ( _24_ VPWR ) ( _23_ VPWR ) ( _22_ VPWR ) ( _21_ VPWR ) ( _20_ VPWR )
      ( _19_ VPWR ) ( _18_ VPWR ) ( _17_ VPWR ) ( _16_ VPWR ) ( _15_ VPWR ) ( _14_ VPWR ) ( _13_ VPWR ) ( _12_ VPWR )
      ( _11_ VPWR ) ( _10_ VPWR ) ( _09_ VPWR ) + USE POWER ;
END SPECIALNETS
NETS 24 ;
    - _00_ ( _18_ D ) ( _12_ X ) + USE SIGNAL ;
    - _01_ ( _19_ D ) ( _15_ X ) + USE SIGNAL ;
    - _02_ ( _20_ D ) ( _16_ X ) + USE SIGNAL ;
    - _03_ ( _21_ D ) ( _17_ X ) + USE SIGNAL ;
    - _04_ ( _15_ A1 ) ( _09_ Y ) + USE SIGNAL ;
    - _05_ ( _12_ A2 ) ( _10_ Y ) + USE SIGNAL ;
    - _06_ ( _12_ B1 ) ( _11_ X ) + USE SIGNAL ;
    - _07_ ( _15_ B1 ) ( _13_ X ) + USE SIGNAL ;
    - _08_ ( _15_ A2 ) ( _14_ X ) + USE SIGNAL ;
    - bit0.d_left ( _23_ A ) ( _20_ Q ) ( _17_ A2 ) ( _16_ A0 ) ( _14_ A1 ) + USE SIGNAL ;
    - bit0.mux.d_hold ( _22_ A ) ( _19_ Q ) ( _16_ A2 ) ( _14_ A0 ) + USE SIGNAL ;
    - bit1.d_left ( _24_ A ) ( _21_ Q ) ( _17_ A0 ) ( _16_ A1 ) ( _11_ A0 ) + USE SIGNAL ;
    - bit2.d_left ( _25_ A ) ( _18_ Q ) ( _17_ A1 ) ( _12_ A1 ) + USE SIGNAL ;
    - clk ( PIN clk ) ( _21_ CLK ) ( _20_ CLK ) ( _19_ CLK ) ( _18_ CLK ) + USE SIGNAL ;
    - d_in[0] ( PIN d_in[0] ) ( _13_ C ) + USE SIGNAL ;
    - d_in[1] ( PIN d_in[1] ) ( _16_ A3 ) + USE SIGNAL ;
    - d_in[2] ( PIN d_in[2] ) ( _17_ A3 ) + USE SIGNAL ;
    - d_in[3] ( PIN d_in[3] ) ( _11_ A1 ) + USE SIGNAL ;
    - q[0] ( PIN q[0] ) ( _22_ X ) + USE SIGNAL ;
    - q[1] ( PIN q[1] ) ( _23_ X ) + USE SIGNAL ;
    - q[2] ( PIN q[2] ) ( _24_ X ) + USE SIGNAL ;
    - q[3] ( PIN q[3] ) ( _25_ X ) + USE SIGNAL ;
    - select[0] ( PIN select[0] ) ( _17_ S1 ) ( _16_ S1 ) ( _13_ B ) ( _12_ B2 ) ( _10_ B ) ( _09_ A ) + USE SIGNAL ;
    - select[1] ( PIN select[1] ) ( _17_ S0 ) ( _16_ S0 ) ( _14_ S ) ( _13_ A ) ( _11_ S ) ( _10_ A ) + USE SIGNAL ;
END NETS
END DESIGN
